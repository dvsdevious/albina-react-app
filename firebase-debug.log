[debug] [2021-08-11T14:27:28.699Z] ----------------------------------------------------------------------
[debug] [2021-08-11T14:27:28.702Z] Command:       /usr/local/bin/node /usr/local/bin/firebase init
[debug] [2021-08-11T14:27:28.702Z] CLI Version:   9.16.0
[debug] [2021-08-11T14:27:28.702Z] Platform:      darwin
[debug] [2021-08-11T14:27:28.702Z] Node Version:  v14.17.3
[debug] [2021-08-11T14:27:28.704Z] Time:          Wed Aug 11 2021 16:27:28 GMT+0200 (Central European Summer Time)
[debug] [2021-08-11T14:27:28.704Z] ----------------------------------------------------------------------
[debug] 
[debug] [2021-08-11T14:27:28.706Z] >>> [apiv2][query] GET https://firebase-public.firebaseio.com/cli.json [none]
[debug] [2021-08-11T14:27:28.733Z] > command requires scopes: ["email","openid","https://www.googleapis.com/auth/cloudplatformprojects.readonly","https://www.googleapis.com/auth/firebase","https://www.googleapis.com/auth/cloud-platform"]
[debug] [2021-08-11T14:27:28.734Z] > authorizing via signed-in user (daria.sheremeteva@gmail.com)
[info] 
     ######## #### ########  ######## ########     ###     ######  ########
     ##        ##  ##     ## ##       ##     ##  ##   ##  ##       ##
     ######    ##  ########  ######   ########  #########  ######  ######
     ##        ##  ##    ##  ##       ##     ## ##     ##       ## ##
     ##       #### ##     ## ######## ########  ##     ##  ######  ########

You're about to initialize a Firebase project in this directory:

  /Users/daraseremeteva/Desktop/Albina Project/albina-react-app

[debug] [2021-08-11T14:27:29.219Z] <<< [apiv2][status] GET https://firebase-public.firebaseio.com/cli.json 200
[debug] [2021-08-11T14:27:29.220Z] <<< [apiv2][body] GET https://firebase-public.firebaseio.com/cli.json {"cloudBuildErrorAfter":1594252800000,"cloudBuildWarnAfter":1590019200000,"defaultNode10After":1594252800000,"minVersion":"3.0.5","node8DeploysDisabledAfter":1613390400000,"node8RuntimeDisabledAfter":1615809600000,"node8WarnAfter":1600128000000}
[info] 
=== Project Setup
[info] 
[info] First, let's associate this project directory with a Firebase project.
[info] You can create multiple project aliases by running firebase use --add, 
[info] but for now we'll just set up a default project.
[info] 
[debug] [2021-08-11T14:55:25.747Z] > refreshing access token with scopes: []
[debug] [2021-08-11T14:55:25.748Z] >>> HTTP REQUEST POST https://www.googleapis.com/oauth2/v3/token  
 <request body omitted>
[debug] [2021-08-11T14:55:25.932Z] <<< HTTP RESPONSE 200 {"expires":"Mon, 01 Jan 1990 00:00:00 GMT","cache-control":"no-cache, no-store, max-age=0, must-revalidate","date":"Wed, 11 Aug 2021 14:55:25 GMT","pragma":"no-cache","content-type":"application/json; charset=utf-8","vary":"X-Origin, Referer, Origin,Accept-Encoding","server":"scaffolding on HTTPServer2","x-xss-protection":"0","x-frame-options":"SAMEORIGIN","x-content-type-options":"nosniff","alt-svc":"h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000,h3-T051=\":443\"; ma=2592000,h3-Q050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\"","accept-ranges":"none","transfer-encoding":"chunked"}
[debug] [2021-08-11T14:55:25.963Z] >>> [apiv2][query] GET https://firebase.googleapis.com/v1beta1/projects pageSize=100
[debug] [2021-08-11T14:55:26.385Z] <<< [apiv2][status] GET https://firebase.googleapis.com/v1beta1/projects 200
[debug] [2021-08-11T14:55:26.385Z] <<< [apiv2][body] GET https://firebase.googleapis.com/v1beta1/projects [omitted]
[info] i  Using project albina-web-f31f2 (Albina Web) 
[info] 
=== Database Setup
[info] i  database: ensuring required API firebasedatabase.googleapis.com is enabled... 
[debug] [2021-08-11T14:55:29.261Z] > refreshing access token with scopes: ["email","https://www.googleapis.com/auth/cloud-platform","https://www.googleapis.com/auth/cloudplatformprojects.readonly","https://www.googleapis.com/auth/firebase","openid"]
[debug] [2021-08-11T14:55:29.262Z] >>> HTTP REQUEST POST https://www.googleapis.com/oauth2/v3/token  
 <request body omitted>
[debug] [2021-08-11T14:55:29.418Z] <<< HTTP RESPONSE 200 {"cache-control":"no-cache, no-store, max-age=0, must-revalidate","date":"Wed, 11 Aug 2021 14:55:29 GMT","expires":"Mon, 01 Jan 1990 00:00:00 GMT","pragma":"no-cache","content-type":"application/json; charset=utf-8","vary":"X-Origin, Referer, Origin,Accept-Encoding","server":"scaffolding on HTTPServer2","x-xss-protection":"0","x-frame-options":"SAMEORIGIN","x-content-type-options":"nosniff","alt-svc":"h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000,h3-T051=\":443\"; ma=2592000,h3-Q050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\"","accept-ranges":"none","transfer-encoding":"chunked"}
[debug] [2021-08-11T14:55:29.439Z] >>> HTTP REQUEST GET https://serviceusage.googleapis.com/v1/projects/albina-web-f31f2/services/firebasedatabase.googleapis.com  
 
[debug] [2021-08-11T14:55:30.471Z] <<< HTTP RESPONSE 200 {"content-type":"application/json; charset=UTF-8","vary":"X-Origin, Referer, Origin,Accept-Encoding","date":"Wed, 11 Aug 2021 14:55:30 GMT","server":"ESF","cache-control":"private","x-xss-protection":"0","x-frame-options":"SAMEORIGIN","x-content-type-options":"nosniff","alt-svc":"h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000,h3-T051=\":443\"; ma=2592000,h3-Q050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\"","accept-ranges":"none","transfer-encoding":"chunked"}
[info] ✔  database: required API firebasedatabase.googleapis.com is enabled 
[info] 
[debug] [2021-08-11T14:55:30.474Z] >>> HTTP REQUEST GET https://firebasedatabase.googleapis.com/v1beta/projects/albina-web-f31f2/locations/-/instances/albina-web-f31f2-default-rtdb  
 
[debug] [2021-08-11T14:55:30.983Z] <<< HTTP RESPONSE 200 {"content-type":"application/json; charset=UTF-8","vary":"X-Origin, Referer, Origin,Accept-Encoding","date":"Wed, 11 Aug 2021 14:55:30 GMT","server":"ESF","cache-control":"private","x-xss-protection":"0","x-frame-options":"SAMEORIGIN","x-content-type-options":"nosniff","alt-svc":"h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000,h3-T051=\":443\"; ma=2592000,h3-Q050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\"","accept-ranges":"none","transfer-encoding":"chunked"}
[info] 
[info] Firebase Realtime Database Security Rules allow you to define how your data should be
[info] structured and when your data can be read from and written to.
[info] 
[debug] [2021-08-11T14:59:00.471Z] >>> HTTP REQUEST GET https://albina-web-f31f2-default-rtdb.europe-west1.firebasedatabase.app/.settings/rules.json  
 
[debug] [2021-08-11T14:59:00.660Z] <<< HTTP RESPONSE 200 {"server":"nginx","date":"Wed, 11 Aug 2021 14:59:00 GMT","content-type":"application/json; charset=utf-8","content-length":"60","connection":"keep-alive","access-control-allow-origin":"*","cache-control":"no-cache","strict-transport-security":"max-age=31556926; includeSubDomains; preload"}
[info] ✔  Database Rules for albina-web-f31f2-default-rtdb have been written to database.rules.json. 
[info] Future modifications to database.rules.json will update Realtime Database Security Rules when you run
[info] firebase deploy.
[info] 
=== Functions Setup
[info] 
[info] A functions directory will be created in your project with sample code
[info] pre-configured. Functions can be deployed with firebase deploy.
[info] 
[debug] [2021-08-11T14:59:00.667Z] > command requires scopes: ["email","openid","https://www.googleapis.com/auth/cloudplatformprojects.readonly","https://www.googleapis.com/auth/firebase","https://www.googleapis.com/auth/cloud-platform"]
[debug] [2021-08-11T14:59:00.667Z] > authorizing via signed-in user (daria.sheremeteva@gmail.com)
[debug] [2021-08-11T14:59:00.667Z] [iam] checking project albina-web-f31f2 for permissions ["firebase.projects.get"]
[debug] [2021-08-11T14:59:00.668Z] >>> HTTP REQUEST POST https://cloudresourcemanager.googleapis.com/v1/projects/albina-web-f31f2:testIamPermissions  
 {"permissions":["firebase.projects.get"]}
[debug] [2021-08-11T14:59:01.415Z] <<< HTTP RESPONSE 200 {"content-type":"application/json; charset=UTF-8","vary":"X-Origin, Referer, Origin,Accept-Encoding","date":"Wed, 11 Aug 2021 14:59:01 GMT","server":"ESF","cache-control":"private","x-xss-protection":"0","x-frame-options":"SAMEORIGIN","x-content-type-options":"nosniff","server-timing":"gfet4t7; dur=598","alt-svc":"h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000,h3-T051=\":443\"; ma=2592000,h3-Q050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\"","accept-ranges":"none","transfer-encoding":"chunked"}
[debug] [2021-08-11T14:59:01.417Z] >>> HTTP REQUEST POST https://serviceusage.googleapis.com/v1/projects/albina-web-f31f2/services/cloudfunctions.googleapis.com:enable  
 
[debug] [2021-08-11T14:59:01.417Z] >>> HTTP REQUEST POST https://serviceusage.googleapis.com/v1/projects/albina-web-f31f2/services/runtimeconfig.googleapis.com:enable  
 
[debug] [2021-08-11T14:59:02.336Z] <<< HTTP RESPONSE 200 {"content-type":"application/json; charset=UTF-8","vary":"X-Origin, Referer, Origin,Accept-Encoding","date":"Wed, 11 Aug 2021 14:59:02 GMT","server":"ESF","cache-control":"private","x-xss-protection":"0","x-frame-options":"SAMEORIGIN","x-content-type-options":"nosniff","alt-svc":"h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000,h3-T051=\":443\"; ma=2592000,h3-Q050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\"","accept-ranges":"none","transfer-encoding":"chunked"}
[debug] [2021-08-11T14:59:02.338Z] <<< HTTP RESPONSE 200 {"content-type":"application/json; charset=UTF-8","vary":"X-Origin, Referer, Origin,Accept-Encoding","date":"Wed, 11 Aug 2021 14:59:02 GMT","server":"ESF","cache-control":"private","x-xss-protection":"0","x-frame-options":"SAMEORIGIN","x-content-type-options":"nosniff","alt-svc":"h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000,h3-T051=\":443\"; ma=2592000,h3-Q050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\"","accept-ranges":"none","transfer-encoding":"chunked"}
[info] ✔  Wrote functions/package.json 
[info] ✔  Wrote functions/.eslintrc.js 
[info] ✔  Wrote functions/index.js 
[info] ✔  Wrote functions/.gitignore 
[info] 
=== Hosting Setup
[info] 
[info] Your public directory is the folder (relative to your project directory) that
[info] will contain Hosting assets to be uploaded with firebase deploy. If you
[info] have a build process for your assets, use your build's output directory.
[info] 
